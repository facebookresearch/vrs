load("//arvr/tools/build_defs:oxx.bzl", "oxx_static_library", "oxx_test")
load("//arvr/tools/build_defs:utils.bzl", "read_config_bool")

is_cmake_generator = read_config_bool("ovr_config", "cmake_generator", False)

OCEAN_DEP = [] if is_cmake_generator else [
    "//xplat/compphoto/ocean:ocean_base",
    "//xplat/compphoto/ocean:ocean_cv",
]

oxx_static_library(
    name = "xprs",
    srcs = glob(["*.cpp"]),
    compatible_with = [
        "ovr_config//os:android",
        "ovr_config//os:linux",
        "ovr_config//os:windows",
        "ovr_config//os:macos",
        "ovr_config//os:iphoneos",
        "ovr_config//os:appletvos",
        "ovr_config//os:watchos",
    ],
    ovrsource_only = False,
    preprocessor_flags = ["-DUSE_OCEAN=0"] if is_cmake_generator else ["-DUSE_OCEAN=1"],
    public_include_directories = ["../../.."],
    public_raw_headers = glob(["*.h"]),
    visibility = ["PUBLIC"],
    deps = [
        "//arvr/libraries/logging:logging",
        "//arvr/libraries/portability:portability",
        "//arvr/libraries/vrs/vrs:vrs",
        "//arvr/libraries/vrs/vrs/utils:utils",
        "//arvr/libraries/vrs/vrs/utils/converters:raw10_to_grey10_converter",
        "//arvr/projects/compression/xprs:xprs",
    ] + OCEAN_DEP,
)

oxx_test(
    name = "unit_test_xprs",
    srcs = glob(["test/*.cpp"]),
    compatible_with = [
        "ovr_config//os:linux-x86_64-no-san",
        "ovr_config//os:macos",
        "ovr_config//os:windows",
    ],
    oncall = "arvr_gaia",
    ovrsource_only = True,
    visibility = [
        "PUBLIC",
    ],
    deps = [
        "//arvr/libraries/logging:advanced_backend",
        "//arvr/libraries/logging:logging",
        "//arvr/libraries/vrs/vrs:vrs",
        "//arvr/libraries/vrs/vrs/utils/xprs:xprs",
        "//arvr/projects/xrtech/TestDataDir:TestDataDir",
    ],
)
