"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4374],{53747:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Organization","title":"Organization","description":"The VRS documentation has different parts:","source":"@site/docs/Organization.md","sourceDirName":".","slug":"/Organization","permalink":"/vrs/docs/Organization","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/vrs/edit/main/website/docs/Organization.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Organization"},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/vrs/docs/Overview"},"next":{"title":"File Structure","permalink":"/vrs/docs/FileStructure"}}');var n=a(74848),s=a(28453),i=a(28774);const o={sidebar_position:2,title:"Organization"},c=void 0,d={},l=[];function h(e){const t={a:"a",br:"br",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"The VRS documentation has different parts:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"This documentation, which describes the concepts, features, and principles of VRS."}),"\n",(0,n.jsxs)(t.li,{children:["The ",(0,n.jsx)(i.default,{target:"_blank",to:"/doxygen/index.html",children:"API Documentation"}),", generated using Doxygen.",(0,n.jsx)(t.br,{}),"\n","To generate the API documentation from the VRS code, run:","\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"  cd <vrs_repo_top_level_folder>\n  doxygen vrs/Doxyfile\n"})}),"\n","You'll find the API documentation in html at ",(0,n.jsx)(t.code,{children:"website/static/doxygen/index.html"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/facebookresearch/vrs/tree/main/sample_code",children:"Sample code"}),", which is not functional, but demonstrates how to use the APIs.","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/facebookresearch/vrs/blob/main/sample_code/SampleRecordAndPlay.cpp",children:"SampleRecordAndPlay.cpp"})," demonstrates different ways to create a file, by dumping the whole content from memory to disk after creating all the records in memory, or by writing the record to disk while continuing to create records."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/facebookresearch/vrs/blob/main/sample_code/SampleImageReader.cpp",children:"SampleImageReader.cpp"})," demonstrates how to read typical image records, that is, records containing metadata and an image."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/facebookresearch/vrs/blob/main/sample_code/SampleRecordFormatDataLayout.cpp",children:"SampleRecordFormatDataLayout.cpp"})," demonstrates how to read metadata blocks."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/facebookresearch/vrs/tree/main/sample_apps",children:"Sample apps"}),", which are runnable apps (though not actually useful). ",(0,n.jsx)(t.a,{href:"https://github.com/facebookresearch/vrs/blob/main/sample_apps/SampleRecordingApp.cpp",children:"The first app"})," generates a VRS file with different record types containing made-up data. ",(0,n.jsx)(t.a,{href:"https://github.com/facebookresearch/vrs/blob/main/sample_apps/SamplePlaybackApp.cpp",children:"The second app"})," reads that VRS file and verifies that the record content is as expected."]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);